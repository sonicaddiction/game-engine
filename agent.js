// Generated by CoffeeScript 1.6.3
(function() {
  var Agent, SkillFactory, StatusEffects, StatusEffectsFactory, log;

  log = (require('./log')).log;

  SkillFactory = (require("./skill")).SkillFactory;

  StatusEffects = (require("./statuseffects")).StatusEffects;

  StatusEffectsFactory = (require("./statuseffects")).StatusEffectsFactory;

  Agent = (function() {
    function Agent(name, maxHitpoints, actions) {
      this.name = name;
      this.maxHitpoints = maxHitpoints;
      this.actions = actions;
      this.hitpoints = this.maxHitpoints;
      this.mainWeapon = null;
      this.skills = {
        sword: SkillFactory.getSwordSkill(),
        initiative: SkillFactory.getInitiative(),
        toughness: SkillFactory.getToughness()
      };
      this.statusEffects = [];
    }

    Agent.prototype.speak = function() {
      return log("My name is " + this.name);
    };

    Agent.prototype.listSkills = function() {
      var skill, value, _ref, _results;
      _ref = this.skills;
      _results = [];
      for (skill in _ref) {
        value = _ref[skill];
        _results.push(log("" + skill + ": " + value));
      }
      return _results;
    };

    Agent.prototype.setMainWeapon = function(weapon) {
      return this.mainWeapon = weapon;
    };

    Agent.prototype.getSkillForMainWeapon = function() {
      return this.skills[this.mainWeapon.weaponType];
    };

    Agent.prototype.isAffectedByStatusEffect = function(statusEffect) {
      return this.statusEffects[statusEffect];
    };

    Agent.prototype.setStunned = function(duration) {
      return this.statusEffects[StatusEffects.stunned] = StatusEffectsFactory.getStunned(duration);
    };

    Agent.prototype.unsetStunned = function() {
      var _ref;
      return (_ref = this.statusEffects[statusEffects.stunned]) != null ? _ref.cure() : void 0;
    };

    Agent.prototype.isStunned = function() {
      var _ref;
      return (_ref = this.statusEffects[StatusEffects.stunned]) != null ? _ref.isActive() : void 0;
    };

    Agent.prototype.setDead = function() {
      return this.statusEffects[StatusEffects.dead] = StatusEffectsFactory.getDead(-1);
    };

    Agent.prototype.unsetDead = function() {
      var _ref;
      return (_ref = this.statusEffects[statusEffects.dead]) != null ? _ref.cure() : void 0;
    };

    Agent.prototype.isDead = function() {
      var _ref;
      return (_ref = this.statusEffects[StatusEffects.dead]) != null ? _ref.isActive() : void 0;
    };

    Agent.prototype.countDownStatuses = function() {
      var name, statusEffect, _ref, _results;
      _ref = this.statusEffects;
      _results = [];
      for (name in _ref) {
        statusEffect = _ref[name];
        _results.push(statusEffect.countDown());
      }
      return _results;
    };

    Agent.prototype.isAlive = function() {
      return !this.isDead();
    };

    return Agent;

  })();

  exports.Agent = Agent;

}).call(this);
